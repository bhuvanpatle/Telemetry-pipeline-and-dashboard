name: Deploy Frontend to GitHub Pages

on:
  push:
    branches: [main]
    paths:
      - "frontend/**"
      - "README.md"
      - ".github/workflows/deploy_frontend.yml"
  workflow_dispatch:
    inputs:
      deploy_reason:
        description: "Reason for manual deployment"
        required: false
        default: "Manual deployment"

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Sets permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

env:
  NODE_VERSION: "18"

jobs:
  # Build the frontend application
  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install frontend dependencies
        run: |
          echo "Installing frontend dependencies..."
          cd frontend
          npm ci
          echo "Dependencies installed successfully"

      - name: Build frontend for production
        run: |
          echo "Building frontend for GitHub Pages deployment..."
          cd frontend

          # Set base path for GitHub Pages
          export VITE_BASE_PATH="/Telemetry-pipeline-and-dashboard/"

          npm run build

          echo "Frontend build completed"
          echo "Build contents:"
          ls -la dist/

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: github-pages-build
          path: frontend/dist
          retention-days: 30

  # Deploy to GitHub Pages
  deploy-pages:
    runs-on: ubuntu-latest
    needs: build-frontend

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: github-pages-build
          path: ./dist

      - name: Prepare deployment summary
        run: |
          echo "## Frontend Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY

          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "**Reason**: ${{ github.event.inputs.deploy_reason }}" >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployment Contents" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          find ./dist -type f | head -20 >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Add deployment status to summary
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployment Results" >> $GITHUB_STEP_SUMMARY
          echo "**Status**: Successfully deployed to GitHub Pages" >> $GITHUB_STEP_SUMMARY
          echo "**URL**: ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Quick Links" >> $GITHUB_STEP_SUMMARY
          echo "- [Dashboard](${{ steps.deployment.outputs.page_url }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Workflow Run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "- [Repository](${{ github.server_url }}/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY

          # Create a simple demo file with build info
          echo "Deployed at: $(date -u)" > ./deployment-info.txt
          echo "Commit: ${{ github.sha }}" >> ./deployment-info.txt
          echo "Workflow: ${{ github.run_id }}" >> ./deployment-info.txt

      - name: Post deployment comment
        if: github.event_name == 'push'
        run: |
          echo "Frontend successfully deployed to GitHub Pages!"
          echo "Live URL: ${{ steps.deployment.outputs.page_url }}"
          echo "Build artifacts are available for 30 days"

  # Fallback deployment using peaceiris/actions-gh-pages
  deploy-fallback:
    runs-on: ubuntu-latest
    needs: build-frontend
    if: failure() && needs.build-frontend.result == 'success'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: github-pages-build
          path: ./frontend-dist

      - name: Deploy using peaceiris/actions-gh-pages (fallback)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend-dist
          commit_message: "Deploy frontend to GitHub Pages (fallback method)"

      - name: Log fallback deployment
        run: |
          echo "## Fallback Deployment Used" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The primary GitHub Pages deployment failed, so we used the fallback method." >> $GITHUB_STEP_SUMMARY
          echo "Your site should be available at: https://${{ github.repository_owner }}.github.io/Telemetry-pipeline-and-dashboard/" >> $GITHUB_STEP_SUMMARY
